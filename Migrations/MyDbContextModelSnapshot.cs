// <auto-generated />
using System;
using BusinessManager.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessManager.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("BusinessManager.Models.Dipendente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cap")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comune")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Inquadramento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LivelloContratto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCivico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Dipendenti");
                });

            modelBuilder.Entity("BusinessManager.Models.DipendenteModels.BustaPaga", b =>
                {
                    b.Property<int>("DipendenteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DataEmissione")
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("OreLavorate")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("OreStraordinario")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PagaOraria")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PagaStraordinario")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalePaga")
                        .HasColumnType("TEXT");

                    b.HasKey("DipendenteId");

                    b.ToTable("BustaPaga");
                });

            modelBuilder.Entity("BusinessManager.Models.Timbratura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DipendenteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoPresenza")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DipendenteId");

                    b.ToTable("Timbrature");
                });

            modelBuilder.Entity("BusinessManager.Models.DipendenteModels.BustaPaga", b =>
                {
                    b.HasOne("BusinessManager.Models.Dipendente", "Dipendente")
                        .WithOne("BustaPaga")
                        .HasForeignKey("BusinessManager.Models.DipendenteModels.BustaPaga", "DipendenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dipendente");
                });

            modelBuilder.Entity("BusinessManager.Models.Timbratura", b =>
                {
                    b.HasOne("BusinessManager.Models.Dipendente", "Dipendente")
                        .WithMany("Timbrature")
                        .HasForeignKey("DipendenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dipendente");
                });

            modelBuilder.Entity("BusinessManager.Models.Dipendente", b =>
                {
                    b.Navigation("BustaPaga")
                        .IsRequired();

                    b.Navigation("Timbrature");
                });
#pragma warning restore 612, 618
        }
    }
}
